// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AUTH API ENDPOINTS PATCH PASSWORD RESET api/v1/auth/reset should not reset password if password is invalid 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "field": "password",
      "message": "password must be more than 8",
      "validation": "min",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS PATCH PASSWORD RESET api/v1/auth/reset should not reset password if token is invalid 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "message": "reset token is invalid",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS PATCH PASSWORD RESET api/v1/auth/reset should reset password if all inputs are valid 1`] = `
Object {
  "data": Object {
    "message": "password reset successfull",
  },
  "status": "success",
}
`;

exports[`AUTH API ENDPOINTS POST CREATE USER api/v1/auth/create-user A super-admin should be able to create a normal user 1`] = `
Object {
  "data": Object {
    "message": "user has been created and mail sent to user",
  },
  "status": "success",
}
`;

exports[`AUTH API ENDPOINTS POST LOGIN api/v1/auth/login should reject login if email is not found  1`] = `
Object {
  "code": Object {
    "error": "Email or password is invalid.",
  },
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST LOGIN api/v1/auth/login should reject login if password is wrong  1`] = `
Object {
  "code": Object {
    "error": "Email or password is invalid.",
  },
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST PASSWORD RESET api/v1/auth/reset should not send mail if user email is invalid 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "field": "email",
      "message": "email is invalid",
      "validation": "email",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST PASSWORD RESET api/v1/auth/reset should not send mail if user is not found 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "message": "email does not exist",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST PASSWORD RESET api/v1/auth/reset should send email if user is valid 1`] = `
Array [
  "message",
]
`;

exports[`AUTH API ENDPOINTS POST SIGN UP api/v1/auth/signup should not sign up user if email is empty 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "field": "email",
      "message": "email is required",
      "validation": "required",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST SIGN UP api/v1/auth/signup should not sign up user that is already registered 1`] = `
Object {
  "code": "ValidationFailed",
  "message": Array [
    Object {
      "field": "email",
      "message": "email must be unique",
      "validation": "unique",
    },
  ],
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST SIGN UP api/v1/auth/signup should not verify an email with a wrong verification code 1`] = `
Object {
  "code": Object {
    "error": "Bad Request",
  },
  "status": "error",
}
`;

exports[`AUTH API ENDPOINTS POST SIGN UP api/v1/auth/signup should sign up user with valid inputs 1`] = `
Array [
  "message",
  "token",
  "user",
]
`;

exports[`AUTH API ENDPOINTS POST SIGN UP api/v1/auth/signup should verify an email with a good verification code 1`] = `
Object {
  "data": Object {
    "message": "User verified",
  },
  "status": "success",
}
`;
